{"ast":null,"code":"var _jsxFileName = \"/Users/luzh/Documents/Git/Tic_Tac_Toe/tic-tac-toe/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Board from \"./Board\";\nimport { calculateWinner } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(board);\n  const handleClick = i => {\n    const boardCopy = [...board];\n    //if user clicks an occupied or if the game is won, return\n    if (winner || boardCopy[i]) return;\n    //put an X or an O in the clicked square\n    boardCopy[i] = xIsNext ? 'X' : 'O';\n    setBoard(boardCopy);\n    setXisNext(!xIsNext);\n  };\n  const jumpTo = () => {};\n  const renderMoves = () => {};\n  return /*#__PURE__*/_jsxDEV(Board, {\n    squares: board,\n    onClick: handleClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"dabZUepayQsmpuxBy5xy8mA8mZs=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Board","calculateWinner","jsxDEV","_jsxDEV","Game","_s","board","setBoard","Array","fill","xIsNext","setXisNext","winner","handleClick","i","boardCopy","jumpTo","renderMoves","squares","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luzh/Documents/Git/Tic_Tac_Toe/tic-tac-toe/src/components/Game.js"],"sourcesContent":["import React , {useState} from \"react\";\nimport Board from \"./Board\";\nimport { calculateWinner } from \"../helpers\";\n\nconst Game = () => {\n    const[board, setBoard] = useState(Array(9).fill(null));\n    const [xIsNext, setXisNext] = useState(true);\n    const winner = calculateWinner(board);\n\n    const handleClick = i =>{\n        const boardCopy = [...board];\n        //if user clicks an occupied or if the game is won, return\n        if(winner || boardCopy[i]) return ;\n        //put an X or an O in the clicked square\n        boardCopy[i] = xIsNext ? 'X' : 'O';\n        setBoard(boardCopy);\n        setXisNext(!xIsNext);\n    };\n\n    const jumpTo = () => {\n\n    };\n\n    const renderMoves = () => {\n\n    };\n\n    return (\n        <Board squares={board} onClick={handleClick} />\n    )\n};\n\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,eAAe,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACtD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMa,MAAM,GAAGX,eAAe,CAACK,KAAK,CAAC;EAErC,MAAMO,WAAW,GAAGC,CAAC,IAAG;IACpB,MAAMC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAAC;IAC5B;IACA,IAAGM,MAAM,IAAIG,SAAS,CAACD,CAAC,CAAC,EAAE;IAC3B;IACAC,SAAS,CAACD,CAAC,CAAC,GAAGJ,OAAO,GAAG,GAAG,GAAG,GAAG;IAClCH,QAAQ,CAACQ,SAAS,CAAC;IACnBJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACxB,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM,CAErB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM,CAE1B,CAAC;EAED,oBACId,OAAA,CAACH,KAAK;IAACkB,OAAO,EAAEZ,KAAM;IAACa,OAAO,EAAEN;EAAY;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAEvD,CAAC;AAAClB,EAAA,CA1BID,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AA4BV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}