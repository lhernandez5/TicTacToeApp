{"ast":null,"code":"var _jsxFileName = \"/Users/luzh/Documents/Git/Tic_Tac_Toe/tic-tac-toe/src/components/Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Board from \"./Board\";\nimport { calculateWinner } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  width: '200px',\n  margin: '20px auto'\n};\nconst Game = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null));\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(board);\n  const handleClick = i => {\n    const boardCopy = [...board];\n    //if user clicks an occupied or if the game is won, return\n    if (winner || boardCopy[i]) return;\n    //put an X or an O in the clicked square\n    boardCopy[i] = xIsNext ? 'X' : 'O';\n    setBoard(boardCopy);\n    setXisNext(!xIsNext);\n  };\n  const jumpTo = () => {};\n  const renderMoves = () => /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => setBoard(Array(9).fill(null)),\n    children: \"Start Game\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Board, {\n      squares: board,\n      onClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: winner ? 'Winner' + 'Next Player: ' : xIsNext ? 'X' : 'O'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), renderMoves()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Game, \"dabZUepayQsmpuxBy5xy8mA8mZs=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Board","calculateWinner","jsxDEV","_jsxDEV","Fragment","_Fragment","styles","width","margin","Game","_s","board","setBoard","Array","fill","xIsNext","setXisNext","winner","handleClick","i","boardCopy","jumpTo","renderMoves","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","squares","style","_c","$RefreshReg$"],"sources":["/Users/luzh/Documents/Git/Tic_Tac_Toe/tic-tac-toe/src/components/Game.js"],"sourcesContent":["import React , {useState} from \"react\";\nimport Board from \"./Board\";\nimport { calculateWinner } from \"../helpers\";\n\nconst styles = {\n    width: '200px',\n    margin: '20px auto'\n}\n\nconst Game = () => {\n    const[board, setBoard] = useState(Array(9).fill(null));\n    const [xIsNext, setXisNext] = useState(true);\n    const winner = calculateWinner(board);\n\n    const handleClick = i => {\n        const boardCopy = [...board];\n        //if user clicks an occupied or if the game is won, return\n        if(winner || boardCopy[i]) return ;\n        //put an X or an O in the clicked square\n        boardCopy[i] = xIsNext ? 'X' : 'O';\n        setBoard(boardCopy);\n        setXisNext(!xIsNext);\n    };\n\n    const jumpTo = () => {\n\n    };\n\n    const renderMoves = () => (\n        <button onClick={() => setBoard(Array(9).fill(null))}>\n            Start Game\n        </button>\n\n    );\n\n    return (\n        <>\n            <Board squares={board} onClick={handleClick} />\n            <div style={styles}>\n                <p>{winner ? 'Winner' + 'Next Player: ' : (xIsNext ? 'X' : 'O')}</p>\n                {renderMoves()}\n            </div>\n        </>\n    )\n};\n\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAOC,KAAK,MAAM,SAAS;AAC3B,SAASC,eAAe,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7C,MAAMC,MAAM,GAAG;EACXC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAACc,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EACtD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMkB,MAAM,GAAGhB,eAAe,CAACU,KAAK,CAAC;EAErC,MAAMO,WAAW,GAAGC,CAAC,IAAI;IACrB,MAAMC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAAC;IAC5B;IACA,IAAGM,MAAM,IAAIG,SAAS,CAACD,CAAC,CAAC,EAAE;IAC3B;IACAC,SAAS,CAACD,CAAC,CAAC,GAAGJ,OAAO,GAAG,GAAG,GAAG,GAAG;IAClCH,QAAQ,CAACQ,SAAS,CAAC;IACnBJ,UAAU,CAAC,CAACD,OAAO,CAAC;EACxB,CAAC;EAED,MAAMM,MAAM,GAAGA,CAAA,KAAM,CAErB,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,kBAChBnB,OAAA;IAAQoB,OAAO,EAAEA,CAAA,KAAMX,QAAQ,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAE;IAAAU,QAAA,EAAC;EAEtD;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAEX;EAED,oBACIzB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACIrB,OAAA,CAACH,KAAK;MAAC6B,OAAO,EAAElB,KAAM;MAACY,OAAO,EAAEL;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/CzB,OAAA;MAAK2B,KAAK,EAAExB,MAAO;MAAAkB,QAAA,gBACfrB,OAAA;QAAAqB,QAAA,EAAIP,MAAM,GAAG,QAAQ,GAAG,eAAe,GAAIF,OAAO,GAAG,GAAG,GAAG;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnEN,WAAW,CAAC,CAAC;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA,eACR,CAAC;AAEX,CAAC;AAAClB,EAAA,CAnCID,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAqCV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}